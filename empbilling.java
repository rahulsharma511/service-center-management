/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package automobile;

import java.awt.print.PrinterException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ASUS
 */
public class empbilling extends javax.swing.JFrame {

    /**
     * Creates new form empbilling
     */
    public empbilling() {
        initComponents();
        fillCombo();
        fillCombo1();
        ta.setVisible(false);
        
    }
    Connection con;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        model = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        submitted = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        mobile = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        status = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        z = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        qnty = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        st = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        eor = new javax.swing.JCheckBox();
        ff = new javax.swing.JCheckBox();
        of = new javax.swing.JCheckBox();
        bf = new javax.swing.JCheckBox();
        ec = new javax.swing.JCheckBox();
        w = new javax.swing.JCheckBox();
        afc = new javax.swing.JCheckBox();
        bc = new javax.swing.JCheckBox();
        sc = new javax.swing.JCheckBox();
        spc = new javax.swing.JCheckBox();
        gc = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb2 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        tam = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        az = new javax.swing.JComboBox<>();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        st1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        chr = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tb = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        desc = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("ENTER REGISTRRATION NO.");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("CUSTOMER NAME");

        name.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        name.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("MODEL");

        model.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        model.setEnabled(false);

        jSeparator1.setBackground(new java.awt.Color(160, 160, 160));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("SUBMITTED AT");

        submitted.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        submitted.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("MOBILE NO");

        mobile.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        mobile.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("PROBLEM/DESCRIPTION");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("STATUS");

        jButton1.setText("SUBMIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("CHANGE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(160, 160, 160));

        jButton3.setText("LOG OUT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("SELECT SPAREPART");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("QUANTITY");

        qnty.setText("1");

        jButton4.setText("ADD");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("REMOVE SELECTED");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("SUBTOTAL");

        st.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stActionPerformed(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(160, 160, 160));

        eor.setText("ENGINE OIL REPLACEMENT");
        eor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eorActionPerformed(evt);
            }
        });

        ff.setText("FUEL FILTER");

        of.setText("OIL FILTER");
        of.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ofActionPerformed(evt);
            }
        });

        bf.setText("BRAKE FLUID");

        ec.setText("ENGINE CHECKUP");

        w.setText("WASHING");

        afc.setText("AIR FILTER CLEANING");

        bc.setText("BATTERY CHARGING");

        sc.setText("SPEEDOMETER CORRECTION");

        spc.setText("SPARKPLUG CLEANING");
        spc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spcActionPerformed(evt);
            }
        });

        gc.setText("GENERAL SERVICE CHARGE");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("SPAREPARTS");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("ADDITIONAL CHARGES");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("CUSTOMER DETAILS");

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setToolTipText("");
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tb2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "name", "price"
            }
        ));
        jScrollPane3.setViewportView(tb2);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("TOTAL AMOUNT");

        jButton6.setText("GENERATE JOB SHEET");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("ADD");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("refresh");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("RESET");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("SUBTOTAL");

        st1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                st1ActionPerformed(evt);
            }
        });

        jLabel16.setText("+");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("CHARGES");

        chr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chrActionPerformed(evt);
            }
        });

        jLabel18.setText("=");

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SPAREPART NAME", "RATE", " QUANTITY", "TOTAL PRICE"
            }
        ));
        jScrollPane5.setViewportView(tb);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setEnabled(false);
        jScrollPane1.setOpaque(false);

        ta.setColumns(20);
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        desc.setColumns(20);
        desc.setRows(5);
        jScrollPane2.setViewportView(desc);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1))
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ff)
                            .addComponent(eor))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(of)
                            .addComponent(bf))
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(w)
                            .addComponent(ec))
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(afc)
                            .addComponent(bc))
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sc)
                            .addComponent(spc))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(gc))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jButton9)
                                .addGap(0, 20, Short.MAX_VALUE)))))
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(44, 44, 44)
                                .addComponent(az, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(98, 98, 98)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(model)
                                    .addComponent(name)
                                    .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addGap(35, 35, 35))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(submitted, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                            .addComponent(mobile))
                                        .addGap(72, 72, 72)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jButton2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(120, 120, 120))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(177, 177, 177)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(st1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chr, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6)
                            .addComponent(tam, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(131, 131, 131))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(st, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(qnty, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(jButton4)
                .addGap(87, 87, 87)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jButton8)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jButton1)
                            .addComponent(az, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(submitted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addGap(44, 44, 44)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(qnty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4)
                            .addComponent(jButton5)
                            .addComponent(jButton8))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(st, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(of)
                    .addComponent(ec)
                    .addComponent(afc)
                    .addComponent(sc)
                    .addComponent(gc)
                    .addComponent(eor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ff)
                    .addComponent(bf)
                    .addComponent(w)
                    .addComponent(bc)
                    .addComponent(spc)
                    .addComponent(jButton7)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(tam, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(st1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(chr, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(44, 44, 44)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void eorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            String q = null,w = null,e = null,r=null,t=null,u=null,o=null;
            String y = null;
            String s=az.getSelectedItem().toString();
            String query="select * from customer where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
                 ResultSet rs=am.st.executeQuery(query);
                 rs.next();
                 q=rs.getString(2);
                 w=rs.getString(3);
                 e=rs.getString(4);
                // r=rs.getString(5);
                 t=rs.getString(6);
                 y=rs.getTimestamp(7).toString();
                 u=rs.getString(8);
                 
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
            String p="select * from bikemodel where id="+e;
        try {
                ResultSet rs=am.st.executeQuery(p);
                rs.next();
                o=rs.getString(2);
            }
            catch (SQLException ex) {
            Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            name.setText(q);
            model.setText(o);
            mobile.setText(w);
            status.setText(t);
            desc.setText(u);
            submitted.setText(y);
             fillCombo1();
             refer();
                String l="truncate table cart2";
                 am.getcon();
        try {
            am.st.executeUpdate(l);
        } catch (SQLException ex) {
            Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
        }
         refer();
        sub();
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        login_form l=new login_form();
        l.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String a=status.getText();
         String s=az.getSelectedItem().toString();
        if(a.equals("incomplete")){
       
        String query="update customer set status='complete' where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
               am.st.executeUpdate(query);
               status.setText("complete");
                 
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            String query="update customer set status='incomplete' where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
               am.st.executeUpdate(query);
               status.setText("incomplete");
                 
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
             
        }   
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String a=z.getSelectedItem().toString();
        String b=qnty.getText();
        int c=Integer.parseInt(b);
         String s=az.getSelectedItem().toString();
         int q = 0,w = 0,p=0;
         String eak = null;
         String query="select * from customer where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query);
               rs.next();
               q=rs.getInt(1);
               eak=rs.getString(4);
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            String query1="select * from spareparts where name='"+a+"' and bike_id="+eak;
            int er = 0;
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query1);
               rs.next();
               w=rs.getInt(1);
               p=rs.getInt(5);
               er=rs.getInt(6);
               } 
            
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
            String iu="select check1("+qnty.getText()+","+er+")";
            am.getcon();
            int h = 0;
        try {
            ResultSet rt=am.st.executeQuery(iu);
            rt.next();
            h=rt.getInt(1);
            
        } catch (SQLException ex) {
            Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(h==1)
        { 
            p=p*c;
            String e="insert into cart1(customer_id,spareparts_id,qnty,totalamount) values(?,?,?,?)";
            PreparedStatement pst;
            getcon1();
        try {
            pst=con.prepareStatement(e);
            pst.setInt(1, q);
            pst.setInt(2, w);
            pst.setInt(3, c);
            pst.setInt(4, p);
            pst.executeUpdate();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        refer();
        sub();
         }
        else
        {
            JOptionPane.showMessageDialog(null, "not enough quantity (available="+er+")");
        }
        
        
            
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        refer();
        sub();
        fillCombo1();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void stActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stActionPerformed
     
        
        
        
    }//GEN-LAST:event_stActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DefaultTableModel a=(DefaultTableModel)tb.getModel();
        int rn=tb.getSelectedRow();
        String f=a.getValueAt(rn,0).toString();
        System.out.println(f);
         int q = 0,n=0;
        String s=az.getSelectedItem().toString();
        String azf = null;
        String query="select * from customer where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query);
               rs.next();
               q=rs.getInt(1);
               azf=rs.getString(4);
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
             String query1="select * from spareparts where name='"+f+"' and bike_id="+azf;
            
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query1);
               rs.next();
               n=rs.getInt(1);
               
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
             String query2="delete from cart1 where customer_id="+q+" and spareparts_id="+n;
            
            am.getcon();
            try{
              am.st.executeUpdate(query2);
              System.out.println("successful");
               
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
            a.removeRow(rn);
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
         //   bill b=new bill();
         //   b.setVisible(true);
       fillText();
       
    }//GEN-LAST:event_jButton6ActionPerformed

    private void ofActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ofActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ofActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      if(eor.isSelected())
          fill(1);
      if(ff.isSelected())
          fill(2);
      if(of.isSelected())
          fill(3);
      if(bf.isSelected())
          fill(4);
      if(ec.isSelected())
          fill(5);
      if(afc.isSelected())
          fill(6);
      if(bc.isSelected())
          fill(7);
      if(spc.isSelected())
          fill(8);
      if(w.isSelected())
          fill(9);
      if(gc.isSelected())
          fill(10);
      if(sc.isSelected())
        fill(11);
      
      refer1();
      subcharge();
      String u=st1.getText();
      int j=Integer.parseInt(u);
      String y=chr.getText();
      int h=Integer.parseInt(y);
      h+=j;
      String f=""+h;
      tam.setText(f);
      
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
           String l="truncate table cart2";
           Automobile am=new Automobile();
                 am.getcon();
        try {
            am.st.executeUpdate(l);
        } catch (SQLException ex) {
            Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
        }
        refer1();
        eor.setSelected(false);
        ff.setSelected(false);
        of.setSelected(false);
        bf.setSelected(false);
        ec.setSelected(false);
        w.setSelected(false);
        afc.setSelected(false);
        bc.setSelected(false);
        sc.setSelected(false);
        spc.setSelected(false);
        gc.setSelected(false);
        
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void st1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_st1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_st1ActionPerformed

    private void chrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chrActionPerformed

    private void spcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spcActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(empbilling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(empbilling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(empbilling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(empbilling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new empbilling().setVisible(true);
            }
        });
    }
     public Connection getcon1() 
    { 
         
       
       
        try{
        String url="jdbc:mysql://localhost:3306/dbms";
        String user="root";
        String password="Rahul@123";
        Class.forName("com.mysql.cj.jdbc.Driver");
        con=DriverManager.getConnection(url, user, password);
        
      
        }
        catch(Exception e)
        {
            System.err.println("connection not established");
        }
         return null;
    }
      public void fillCombo(){
           String qaz="select * from customer";
          az.removeAllItems();
         try {
               Automobile am=new Automobile();
               am.getcon();
               
               ResultSet rs=am.st.executeQuery(qaz);
               while(rs.next())
               {
                   String name=rs.getString("regno");
                  
                   az.addItem(name);
               }  
               am.con.close();
         } catch (SQLException ex) {
             Logger.getLogger(newbike.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
       public void fillCombo1(){
           String a=model.getText();
           String qaz="select * from spareparts where bike_id in(select id from bikemodel where name='"+a+"')";
          z.removeAllItems();
         try {
               Automobile am=new Automobile();
               am.getcon();
               
               ResultSet rs=am.st.executeQuery(qaz);
               while(rs.next())
               {
                   String name=rs.getString("name");
                  
                   z.addItem(name);
               }  
               am.con.close();
         } catch (SQLException ex) {
             Logger.getLogger(newbike.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
          public void refer()
    {
      
     DefaultTableModel a=(DefaultTableModel)tb.getModel();
     a.setRowCount(0);
     int q = 0;
     String s=az.getSelectedItem().toString();
     String query="select * from customer where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query);
               rs.next();
               q=rs.getInt(1);
               
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
       getcon1();
       String query1="select b.name,b.sp,a.qnty,a.totalamount from cart1 a inner join spareparts as b on a.spareparts_id=b.id where customer_id="+q;
       PreparedStatement st;
     
       
          try {
                  st=con.prepareStatement(query1);
                ResultSet rs=st.executeQuery();
                 while(rs.next())
          {
               String x=rs.getString(1);  
              int t=rs.getInt(2);
             
              int c=rs.getInt(3);
               int u=rs.getInt(4);
             
             
             
              a.addRow(new Object[]{x,t,c,u});
              
          }
          rs.close();
          st.close();
          } catch (SQLException ex) {
              Logger.getLogger(inventory.class.getName()).log(Level.SEVERE, null, ex);
          }
    }
          public void sub()
          {
                int q = 0;
     String s=az.getSelectedItem().toString();
     String query="select * from customer where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query);
               rs.next();
               q=rs.getInt(1);
               
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
                 String query1="select sum(totalamount) from cart1 where customer_id="+q;
        String a=null;
       
        am.getcon();
        try {
            ResultSet rs=am.st.executeQuery(query1);
            rs.next();
            a=rs.getString(1);
        } catch (SQLException ex) {
            Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
        }
        st.setText(a);
        st1.setText(a);
          }
          public void subcharge()
          {
                int q = 0;
     String s=az.getSelectedItem().toString();
     String query="select * from customer where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query);
               rs.next();
               q=rs.getInt(1);
               
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
                 String query1="select sum(totalamount) from cart2 where customer_id="+q;
        String a=null;
       
        am.getcon();
        try {
            ResultSet rs=am.st.executeQuery(query1);
            rs.next();
            a=rs.getString(1);
        } catch (SQLException ex) {
            Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
        }
       chr.setText(a);
          }
          
          public void  fill(int a){
            //  String a=z.getSelectedItem().toString();
        
            
         String b=qnty.getText();
       
         String s=az.getSelectedItem().toString();
         int q = 0,p=0;
         String query="select * from customer where regno='"+s+"'";
            Automobile am=new Automobile();
        
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query);
               rs.next();
               q=rs.getInt(1);
               
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
            String query1="select * from charges where id="+a;
            
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query1);
               rs.next();
             //  w=rs.getInt(1);
               p=rs.getInt(3);
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
         
            String e="insert into cart2(customer_id,charges_id,totalamount) values(?,?,?)";
            PreparedStatement pst;
            getcon1();
        try {
            pst=con.prepareStatement(e);
            pst.setInt(1, q);
            pst.setInt(2, a);
            pst.setInt(3, p);
            pst.executeUpdate();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
        }
          }
          
          
         public void refer1()
    {
      
     DefaultTableModel a=(DefaultTableModel)tb2.getModel();
     a.setRowCount(0);
     int q = 0;
     String s=az.getSelectedItem().toString();
     String query="select * from customer where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query);
               rs.next();
               q=rs.getInt(1);
               
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
       getcon1();
       String query1="select b.name,b.rate from cart2 a inner join charges as b on a.charges_id=b.id where customer_id="+q;
       PreparedStatement st;
     
       
          try {
                  st=con.prepareStatement(query1);
                ResultSet rs=st.executeQuery();
                 while(rs.next())
          {
               String x=rs.getString(1);  
              int t=rs.getInt(2);
             
            
            
             
             
             
              a.addRow(new Object[]{x,t});
              
          }
          rs.close();
          st.close();
          } catch (SQLException ex) {
              Logger.getLogger(inventory.class.getName()).log(Level.SEVERE, null, ex);
          }
    }
    public void fillText()
    {
        
        
         
                ta.append("\t\tBIKE 24\n\n"
                
                + "Sinhgad Institutes,\nAmbegaon BK,\nPune-041\n"
                + "________________________________________________\n"
                + "Registration No : " +az.getSelectedItem() +"\n"
                + "Customer Name : " +name.getText()+"\n"
                + "Model : " +model.getText() +"\n"
                + "Mobile No : "+mobile.getText() +"\n"
                + "Total : " +st.getText()+"\n"
                + "Problem Description : " + desc.getText() +"\n"
                + "\n"
                        
            );
       
 
     int q = 0;
     String s=az.getSelectedItem().toString();
     String query="select * from customer where regno='"+s+"'";
            Automobile am=new Automobile();
            am.getcon();
            try{
               ResultSet rs=am.st.executeQuery(query);
               rs.next();
               q=rs.getInt(1);
               
               } 
            catch (SQLException ex) {
                Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
       getcon1();
       String query1="select b.name,b.sp,a.qnty,a.totalamount from cart1 a inner join spareparts as b on a.spareparts_id=b.id where customer_id="+q;
       PreparedStatement st;
     int total_amount=0;
       
          try {
                  st=con.prepareStatement(query1);
                ResultSet rs=st.executeQuery();
                ta.append("Name \tRate \tQty \tAmount\n");
                 while(rs.next())
          {
              String sp_name= rs.getString(1);
              int sp_rate= rs.getInt(2);
              int sp_qty = rs.getInt(3);
              int sp_amount = rs.getInt(4);
              total_amount+=sp_amount;
              ta.append(sp_name +"\t\t" +sp_rate +"\t" +sp_qty +"\t" +sp_amount +"\n" );
        
          }
       //    
           rs.close();
          st.close();
          } catch (SQLException ex) {
              Logger.getLogger(inventory.class.getName()).log(Level.SEVERE, null, ex);
          }
          
            getcon1();
       String query2="select b.name,a.totalamount from cart2 a inner join charges as b on a.charges_id=b.id where customer_id="+q;
       //PreparedStatement st;
    
       
          try {
                  st=con.prepareStatement(query2);
                ResultSet rs=st.executeQuery();
               // ta.append("Name \tRate \tQty \tAmount\n");
                 while(rs.next())
          {
              String sp_name= rs.getString(1);
              int sp_rate= rs.getInt(2);
             // int sp_qty = rs.getInt(3);
             // int sp_amount = rs.getInt(4);
             // total_amount+=sp_amount;
              ta.append(sp_name +"\t\t" +sp_rate +"\t" +" 1" +"\t" +sp_rate +"\n" );
        
          }
         ta.append("\n\n\t\tTotal : " +tam.getText());
           rs.close();
          st.close();
          } catch (SQLException ex) {
              Logger.getLogger(inventory.class.getName()).log(Level.SEVERE, null, ex);
          }
          
          
      try {
            // TODO add your handling code here:
            ta.print();
        } catch (PrinterException ex) {
            System.out.println("error");
        }
      
      
      
      
      String er="call pcursor()";
        am.getcon();
        try {
            am.st.executeQuery(er);
        } catch (SQLException ex) {
            Logger.getLogger(empbilling.class.getName()).log(Level.SEVERE, null, ex);
        }
      
      
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox afc;
    public javax.swing.JComboBox<String> az;
    private javax.swing.JCheckBox bc;
    private javax.swing.JCheckBox bf;
    private javax.swing.JTextField chr;
    private javax.swing.JTextArea desc;
    private javax.swing.JCheckBox ec;
    private javax.swing.JCheckBox eor;
    private javax.swing.JCheckBox ff;
    private javax.swing.JCheckBox gc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    public javax.swing.JTextField mobile;
    public javax.swing.JTextField model;
    public javax.swing.JTextField name;
    private javax.swing.JCheckBox of;
    private javax.swing.JTextField qnty;
    private javax.swing.JCheckBox sc;
    private javax.swing.JCheckBox spc;
    public javax.swing.JTextField st;
    private javax.swing.JTextField st1;
    public javax.swing.JTextField status;
    private javax.swing.JTextField submitted;
    private javax.swing.JTextArea ta;
    private javax.swing.JTextField tam;
    private javax.swing.JTable tb;
    private javax.swing.JTable tb2;
    private javax.swing.JCheckBox w;
    private javax.swing.JComboBox<String> z;
    // End of variables declaration//GEN-END:variables
}
